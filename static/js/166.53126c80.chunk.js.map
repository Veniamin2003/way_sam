{"version":3,"file":"static/js/166.53126c80.chunk.js","mappings":"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","sources":["webpack://way_sam/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://way_sam/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://way_sam/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","webpack://way_sam/./src/components/Users/Users.module.css?b9d0","webpack://way_sam/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MyPosts_content__plaUH\",\"posts\":\"MyPosts_posts__puurh\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Post_content__rc+AA\",\"item\":\"Post_item__WzUdB\"};","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://w7.pngwing.com/pngs/862/646/png-transparent-beard-hipster-male-man-avatars-xmas-giveaway-icon-thumbnail.png\"></img>\r\n            {props.messages}\r\n            <div>\r\n                <span>Like {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    console.log(\"RENDER\")\r\n    let postsElements = props.posts.map(p => <Post messages={p.message} key={p.id} likesCount={p.likesCount}/>);\r\n\r\n    let AddNewPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div>\r\n                <h3>my posts</h3>\r\n                <AddNewPostTextFormRedux onSubmit={AddNewPost}/>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name=\"newPostText\" placeholder=\"Enter your post\"\r\n            validate={[required, maxLength10]}/>\r\n            <div>\r\n                <button>Add posts</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostTextFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n} \r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(MyPosts)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__gYXcM\",\"statusJob\":\"ProfileInfo_statusJob__zsazX\"};","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\ncomponentDidUpdate(prevProps, prevState){\r\n        debugger\r\n        if(prevProps.status !== this.props.status)\r\n        this.setState({\r\n            status: this.props.status\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || \"---------\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} value={this.state.status} onBlur={this.deactivateEditMode}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChanged = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"---------\"}</span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChanged} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import s from './ProfileInfo.module.css'\r\nimport React from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport relax from '../../../assets/images/relax1.gif'\r\nimport searching from '../../../assets/images/searching1.gif'\r\nimport preloader from \"../../../assets/images/loader.gif\";\r\nimport ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/man_user.png\";\r\nimport styles from \"../../Users/Users.module.css\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus }) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <div>\r\n                    <img src={profile.photos.large != null ? profile.photos.large : userPhoto} className={styles.userPhoto}/>\r\n                </div>\r\n                <div>{profile.fullName}</div>\r\n                <div>{profile.aboutMe}</div>\r\n                <div>{profile.contacts.vk}</div>\r\n                <div>\r\n                    <div>Статус поиска работы: </div>\r\n                    <div className={s.statusJob}>{profile.lookingForAJob === true ? <img src={searching} /> : <img src={relax} />}</div>\r\n                </div>\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport {\r\n    Navigate,\r\n    useLocation,\r\n    useNavigate,\r\n    useParams,\r\n} from \"react-router-dom\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super( props );\r\n        this.state = {\r\n            isShowMyProfile: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let userIdFromPath = +this.props.router.params.userId;\r\n        let authorisedUserId = this.props.authorisedUserId;\r\n\r\n        if (userIdFromPath) {\r\n\r\n            this.props.getUserProfile( userIdFromPath );\r\n            this.props.getStatus( userIdFromPath );\r\n\r\n        } else {\r\n\r\n            if (this.props.isAuth) {\r\n                this.props.getUserProfile( authorisedUserId );\r\n                this.props.getStatus( authorisedUserId );\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        let userIdFromPath = +this.props.router.params.userId;\r\n        let authorisedUserId = this.props.authorisedUserId;\r\n        let isShowMyProfile = this.state.isShowMyProfile;\r\n\r\n        if (isShowMyProfile) {\r\n\r\n            if (userIdFromPath === authorisedUserId) {\r\n                this.setState( {isShowMyProfile: false} )\r\n            }\r\n\r\n            if (!userIdFromPath && this.props.isAuth) {\r\n                this.props.getUserProfile( authorisedUserId );\r\n                this.props.getStatus( authorisedUserId );\r\n                this.setState( {isShowMyProfile: false} )\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.props.isAuth && !this.props.router.params.userId) {\r\n            return <Navigate to={'/login'} />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction withRouter(Component) {\r\n\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n\r\n        return <Component\r\n            {...props}\r\n            router={{location, navigate, params}} />;\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorisedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nconst ProfileContainerCompose = compose(\r\n    withRouter,\r\n    connect( mapStateToProps, {getUserProfile, getStatus, updateStatus} )\r\n)( ProfileContainer );\r\n\r\nexport default ProfileContainerCompose;","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")} >\r\n            <div>\r\n                {children}\r\n            </div>\r\n            { hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input}{...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input}{...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","export const required = value => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"Users_userPhoto__Xq1KC\",\"usersPhoto\":\"Users_usersPhoto__GDoFk\"};","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__AAwsu\",\"error\":\"FormsControls_error__DRmrI\",\"formSummaryError\":\"FormsControls_formSummaryError__OepQF\"};"],"names":["props","className","s","src","messages","likesCount","maxLength10","maxLengthCreator","AddNewPostTextFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","console","log","postsElements","posts","map","p","message","id","values","addPost","newPostText","compose","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","React","useState","editMode","setEditMode","status","setStatus","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","photos","large","userPhoto","styles","fullName","aboutMe","contacts","vk","lookingForAJob","searching","relax","Preloader","MyPostsContainer","ProfileContainer","isShowMyProfile","userIdFromPath","this","router","params","userId","authorisedUserId","getUserProfile","getStatus","isAuth","prevProps","prevState","snapshot","setState","to","Component","location","useLocation","navigate","useNavigate","useParams","auth","FormControl","input","meta","touched","error","children","hasError","restProps","child","Input","createField","validators","text","maxLength","length"],"sourceRoot":""}