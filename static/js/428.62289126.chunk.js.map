{"version":3,"file":"static/js/428.62289126.chunk.js","mappings":"uOACA,EAA0B,yBAA1B,EAA2D,uBCA3D,EAAuD,mB,SCevD,EAba,SAACA,GACV,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKC,IAAI,wHACRH,EAAMI,UACP,0BACI,oCAAYJ,EAAMK,oB,uCCmB5BC,GAAcC,EAAAA,EAAAA,GAAiB,IAejCC,GAA0BC,EAAAA,EAAAA,GAAU,CAACC,KAAM,yBAAjBD,EAbT,SAACT,GAClB,OACI,kBAAMW,SAAUX,EAAMY,aAAtB,WACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUC,KAAK,cAAcC,YAAY,kBAC3DC,SAAU,CAACC,EAAAA,EAAUb,MACrB,0BACI,kDAShB,EAtCgB,SAACN,GAEb,IAAIoB,EAAgBpB,EAAMqB,MAAMC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAiBnB,SAAUmB,EAAEC,QAAoBnB,WAAYkB,EAAElB,YAApBkB,EAAEE,OAMtF,OACI,gBAAKxB,UAAWC,EAAhB,UACI,4BACI,sCACA,SAACM,EAAD,CAAyBG,SARpB,SAACe,GACd1B,EAAM2B,QAAQD,EAAOE,iBAQb,gBAAK3B,UAAWC,EAAhB,SACKkB,U,oBCArB,GAAeS,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAhBkB,SAACC,GACnB,MAAO,CACHV,MAAOU,EAAMC,YAAYX,MACzBO,YAAaG,EAAMC,YAAYJ,gBAId,SAACK,GACtB,MAAO,CACHN,QAAS,SAACC,GACNK,GAASC,EAAAA,EAAAA,IAAqBN,SAK1C,CAEEO,G,SCtBF,GAAgB,iBAAmB,sCAAsC,UAAY,+BAA+B,aAAe,mC,wHC6CnI,EA5C+B,SAACnC,GAE5B,OAA8BoC,EAAAA,EAAAA,WAAS,GAAvC,eAAKC,EAAL,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAASpC,EAAMuC,QAAzC,eAAKA,EAAL,KAAaC,EAAb,KAeA,OACI,yBAAOxC,EAAMyC,SAET,4BACMJ,IACE,4BACI,mEAAe,iBAAMK,cAnBhB,WACrBJ,GAAY,IAkBmB,SAAwCtC,EAAMuC,QAAU,+GAG9EF,IACG,0BACI,kBAAOM,SAfH,SAACC,GACrBJ,EAAUI,EAAEC,cAAcC,QAcwBC,WAAW,EAAMC,OApB5C,WACvBV,GAAY,GACZtC,EAAMiD,aAAaV,IAkB4EO,MAAOP,UAKlG,4BACI,mEAAe,0BAAOvC,EAAMuC,QAAU,kH,8BCUtD,GAFiC9B,EAAAA,EAAAA,GAAU,CAACC,KAAM,gBAAjBD,EAvCT,SAAC,GAAoC,IAAnCyC,EAAkC,EAAlCA,QAAStC,EAAyB,EAAzBA,aAAcuC,EAAW,EAAXA,MAC7C,OAAO,kBAAMxC,SAAUC,EAAhB,WACH,0BAAK,uCAEHuC,IACE,gBAAKlD,UAAWmD,EAAAA,EAAAA,iBAAhB,SACKD,KAIT,4BACI,qCADJ,MACuBE,EAAAA,EAAAA,IAAY,YAAa,WAAY,GAAIC,EAAAA,QAEhE,4BACI,6CADJ,MACgCD,EAAAA,EAAAA,IAAY,GAAI,iBAAkB,GAAIC,EAAAA,GAAO,CAACC,KAAM,iBAGpF,4BACI,kDADJ,KAEMF,EAAAA,EAAAA,IAAY,yBAA0B,4BAA6B,GAAItC,EAAAA,QAI7E,4BACI,oCADJ,KAEMsC,EAAAA,EAAAA,IAAY,WAAY,UAAW,GAAItC,EAAAA,QAG7C,4BACI,oCADJ,KACsByC,OAAOC,KAAKP,EAAQQ,UAAUpC,KAAI,SAAAqC,GACpD,OAAO,gBAAe1D,UAAWC,EAAAA,QAA1B,UAEH,yBAAIyD,EAAJ,MAAYN,EAAAA,EAAAA,IAAYM,EAAK,YAAcA,EAAK,GAAIL,EAAAA,QAFvCK,eCmBvBC,EAAc,SAAC,GAAsC,IAArCV,EAAoC,EAApCA,QAAST,EAA2B,EAA3BA,QAASoB,EAAkB,EAAlBA,aACpC,OAAO,2BAEFpB,IAAW,gCAAM,mBAAQqB,QAASD,EAAjB,kBAAN,QAEZ,4BACI,+CADJ,IACiBX,EAAQa,aAGzB,iBAAK9D,UAAWC,EAAAA,UAAhB,WACI,4IACA,gBAAKD,UAAWC,EAAAA,aAAhB,SAAiCgD,EAAQc,gBAAiB,gBAAK7D,IAAK8D,KAAe,gBAAK9D,IAAK+D,SAGhGhB,EAAQc,iBACL,4BACI,2LADJ,IAC0Cd,EAAQiB,8BAItD,4BACI,kEADJ,IACqBjB,EAAQkB,YAG7B,4BACI,6EADJ,IACsBZ,OAAOC,KAAKP,EAAQQ,UAAUpC,KAAI,SAAAqC,GACpD,OAAO,SAACU,EAAD,CAAmBC,aAAcX,EAAKY,aAAcrB,EAAQQ,SAASC,IAAvDA,aAK3BU,EAAU,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aAC5B,OAAO,iBAAKtE,UAAWuE,EAAAA,EAAAA,QAAhB,WAAiC,uBAAIF,IAArC,KAAyDC,MAGpE,EA/EoB,SAAC,GAAuE,IAAtErB,EAAqE,EAArEA,QAASX,EAA4D,EAA5DA,OAAQU,EAAoD,EAApDA,aAAcR,EAAsC,EAAtCA,QAASgC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,YAErE,GAA8BtC,EAAAA,EAAAA,WAAS,GAAvC,eAAKC,EAAL,KAAeC,EAAf,KAEA,IAAKY,EACD,OAAO,SAACyB,EAAA,EAAD,IAgBX,OACI,0BACI,iBAAK1E,UAAWC,EAAAA,iBAAhB,WAEI,0BACI,gBAAKC,IAAK+C,EAAQ0B,OAAOC,OAASC,EAAW7E,UAAWuE,EAAAA,EAAAA,eAG5D,yBACK/B,IAAW,kBAAOc,KAAM,OAAQZ,SAtBrB,SAACC,GACrBA,EAAEmC,OAAOC,MAAMC,QACfR,EAAU7B,EAAEmC,OAAOC,MAAM,SAuBnB3C,GACI,SAAC,EAAD,CAAiB6C,cAAehC,EAASA,QAASA,EAASvC,SApB5D,SAACwE,GACdT,EAAYS,GAAUC,MAAK,WACvB9C,GAAY,UAmBF,SAACsB,EAAD,CAAaV,QAASA,EAAST,QAASA,EAASoB,aAAc,WAAOvB,GAAY,OAGxF,SAAC,EAAD,CAAwBC,OAAQA,EAAQU,aAAcA,EAAcR,QAASA,UC9B7F,EAfgB,SAACzC,GAEb,OACI,4BACI,SAAC,EAAD,CAAakD,QAASlD,EAAMkD,QACfX,OAAQvC,EAAMuC,OACdU,aAAcjD,EAAMiD,aACpBR,QAASzC,EAAMyC,QACfgC,UAAWzE,EAAMyE,UACjBC,YAAa1E,EAAM0E,eAChC,SAACW,EAAD,QCFNC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAEF,WAAYtF,GAAQ,IAAD,yBACf,cAAOA,IACF+B,MAAQ,CACTwD,iBAAiB,GAHN,EAgElB,OA3DA,yCAED,WAEI,IAAIC,GAAkBC,KAAKzF,MAAM0F,OAAOC,OAAOC,OAC3CC,EAAmBJ,KAAKzF,MAAM6F,iBAE9BL,GAEAC,KAAKzF,MAAM8F,eAAgBN,GAC3BC,KAAKzF,MAAM+F,UAAWP,IAIlBC,KAAKzF,MAAMgG,SACXP,KAAKzF,MAAM8F,eAAgBD,GAC3BJ,KAAKzF,MAAM+F,UAAWF,MAGjC,gCAED,SAAmBI,EAAWC,EAAWC,GAErC,IAAIX,GAAkBC,KAAKzF,MAAM0F,OAAOC,OAAOC,OAC3CC,EAAmBJ,KAAKzF,MAAM6F,iBACZJ,KAAK1D,MAAMwD,kBAIzBC,IAAmBK,GACnBJ,KAAKW,SAAU,CAACb,iBAAiB,KAGhCC,GAAkBC,KAAKzF,MAAMgG,SAC9BP,KAAKzF,MAAM8F,eAAgBD,GAC3BJ,KAAKzF,MAAM+F,UAAWF,GACtBJ,KAAKW,SAAU,CAACb,iBAAiB,QAG5C,oBAED,WAEI,OAAKE,KAAKzF,MAAMgG,QAAWP,KAAKzF,MAAM0F,OAAOC,OAAOC,QAKhD,0BACI,SAAC,GAAD,kBAAaH,KAAKzF,OAAlB,IACSyC,SAAUgD,KAAKzF,MAAM0F,OAAOC,OAAOC,OACnC1C,QAASuC,KAAKzF,MAAMkD,QACpBX,OAAQkD,KAAKzF,MAAMuC,OACnBU,aAAcwC,KAAKzF,MAAMiD,aACzBwB,UAAWgB,KAAKzF,MAAMyE,UACtBC,YAAae,KAAKzF,MAAM0E,kBAX9B,SAAC,KAAD,CAAU2B,GAAI,eAe5B,EAlECf,CAAyBgB,EAAAA,WAoF/B,IAYA,GALgCzE,EAAAA,EAAAA,KAtBhC,SAAoB0E,GAYhB,OAVA,SAAiCvG,GAC7B,IAAIwG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXhB,GAASiB,EAAAA,EAAAA,MAEb,OAAO,SAACL,GAAD,kBACCvG,GADD,IAEH0F,OAAQ,CAACc,SAAAA,EAAUE,SAAAA,EAAUf,OAAAA,UAerC7D,EAAAA,EAAAA,KATkB,SAACC,GAAD,MAAY,CAC9BmB,QAASnB,EAAMC,YAAYkB,QAC3BX,OAAQR,EAAMC,YAAYO,OAC1BsD,iBAAkB9D,EAAM8E,KAAKpF,GAC7BuE,OAAQjE,EAAM8E,KAAKb,UAKO,CAACF,eAAAA,EAAAA,GAAgBC,UAAAA,EAAAA,GAAW9C,aAAAA,EAAAA,GAAcwB,UAAAA,EAAAA,GAAWC,YAAAA,EAAAA,KAFnD7C,CAG7ByD,I,mBCzGH,KAAgB,UAAY,yBAAyB,WAAa,0BAA0B,QAAU,yB","sources":["webpack://way_sam/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://way_sam/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://way_sam/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","webpack://way_sam/./src/components/Users/Users.module.css?b9d0"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MyPosts_content__plaUH\",\"posts\":\"MyPosts_posts__puurh\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Post_content__rc+AA\",\"item\":\"Post_item__WzUdB\"};","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://w7.pngwing.com/pngs/862/646/png-transparent-beard-hipster-male-man-avatars-xmas-giveaway-icon-thumbnail.png\"></img>\r\n            {props.messages}\r\n            <div>\r\n                <span>Like {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElements = props.posts.map(p => <Post key={p.id} messages={p.message} key={p.id} likesCount={p.likesCount}/>);\r\n\r\n    let AddNewPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div>\r\n                <h3>my posts</h3>\r\n                <AddNewPostTextFormRedux onSubmit={AddNewPost}/>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name=\"newPostText\" placeholder=\"Enter your post\"\r\n            validate={[required, maxLength10]}/>\r\n            <div>\r\n                <button>Add posts</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostTextFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n} \r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(MyPosts)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__gYXcM\",\"statusJob\":\"ProfileInfo_statusJob__zsazX\",\"imgStatusJob\":\"ProfileInfo_imgStatusJob__ynJVs\"};","import React, {useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChanged = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>{ props.isOwner\r\n            ?\r\n            <div>\r\n                {!editMode &&\r\n                    <div>\r\n                        <b>Статус: </b><span onDoubleClick={activateEditMode}>{props.status || \"Статус отсутствует\"}</span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input onChange={onStatusChanged} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n            :\r\n            <div>\r\n                <b>Статус: </b><span>{props.status || \"Статус отсутствует\"}</span>\r\n            </div>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ProfileStatusWithHooks","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport s from './ProfileInfo.module.css'\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({profile, handleSubmit, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button>save</button></div>\r\n\r\n        { error &&\r\n            <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n        }\r\n\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: { createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"} )}\r\n        </div>\r\n\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            { createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea  )}\r\n        </div>\r\n\r\n\r\n        <div>\r\n            <b>About me</b>:\r\n            { createField(\"About me\", \"aboutMe\", [], Textarea  )}\r\n        </div>\r\n\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n\r\n                <b>{key}: { createField(key, \"contacts.\" + key, [], Input )}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import s from './ProfileInfo.module.css'\r\nimport React, {useState} from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport relax from '../../../assets/images/relax1.gif'\r\nimport searching from '../../../assets/images/searching1.gif'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/man_user.png\";\r\nimport styles from \"../../Users/Users.module.css\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false);\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n\r\n                <div>\r\n                    <img src={profile.photos.large || userPhoto} className={styles.mainPhoto}/>\r\n                </div>\r\n\r\n                <div>\r\n                    {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n                </div>\r\n\r\n                { editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => {setEditMode(true)}}/>}\r\n\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} isOwner={isOwner}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n\r\n        {isOwner && <div> <button onClick={goToEditMode}>edit</button> </div>}\r\n\r\n        <div>\r\n            <b>Имя:</b> {profile.fullName}\r\n        </div>\r\n\r\n        <div className={s.statusJob}>\r\n            <b>Статус поиска работы:</b>\r\n            <div className={s.imgStatusJob}>{profile.lookingForAJob ? <img src={searching}/> : <img src={relax}/>}</div>\r\n        </div>\r\n\r\n        {profile.lookingForAJob &&\r\n            <div>\r\n                <b>Мои профессиональные навыыки:</b> {profile.lookingForAJobDescription}\r\n            </div>\r\n        }\r\n\r\n        <div>\r\n            <b>Обо мне:</b> {profile.aboutMe}\r\n        </div>\r\n\r\n        <div>\r\n            <b>Контакты:</b> {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>})}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={styles.contact} ><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         isOwner={props.isOwner}\r\n                         savePhoto={props.savePhoto}\r\n                         saveProfile={props.saveProfile}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport {\r\n    Navigate,\r\n    useLocation,\r\n    useNavigate,\r\n    useParams,\r\n} from \"react-router-dom\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super( props );\r\n        this.state = {\r\n            isShowMyProfile: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let userIdFromPath = +this.props.router.params.userId;\r\n        let authorisedUserId = this.props.authorisedUserId;\r\n\r\n        if (userIdFromPath) {\r\n\r\n            this.props.getUserProfile( userIdFromPath );\r\n            this.props.getStatus( userIdFromPath );\r\n\r\n        } else {\r\n\r\n            if (this.props.isAuth) {\r\n                this.props.getUserProfile( authorisedUserId );\r\n                this.props.getStatus( authorisedUserId );\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        let userIdFromPath = +this.props.router.params.userId;\r\n        let authorisedUserId = this.props.authorisedUserId;\r\n        let isShowMyProfile = this.state.isShowMyProfile;\r\n\r\n        if (isShowMyProfile) {\r\n\r\n            if (userIdFromPath === authorisedUserId) {\r\n                this.setState( {isShowMyProfile: false} )\r\n            }\r\n\r\n            if (!userIdFromPath && this.props.isAuth) {\r\n                this.props.getUserProfile( authorisedUserId );\r\n                this.props.getStatus( authorisedUserId );\r\n                this.setState( {isShowMyProfile: false} )\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.props.isAuth && !this.props.router.params.userId) {\r\n            return <Navigate to={'/login'} />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         isOwner={!this.props.router.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         savePhoto={this.props.savePhoto}\r\n                         saveProfile={this.props.saveProfile}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction withRouter(Component) {\r\n\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n\r\n        return <Component\r\n            {...props}\r\n            router={{location, navigate, params}} />;\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorisedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nconst ProfileContainerCompose = compose(\r\n    withRouter,\r\n    connect( mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile} )\r\n)( ProfileContainer );\r\n\r\nexport default ProfileContainerCompose;","// extracted by mini-css-extract-plugin\nexport default {\"mainPhoto\":\"Users_mainPhoto__qsFtM\",\"usersPhoto\":\"Users_usersPhoto__GDoFk\",\"contact\":\"Users_contact__Encfe\"};"],"names":["props","className","s","src","messages","likesCount","maxLength10","maxLengthCreator","AddNewPostTextFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","postsElements","posts","map","p","message","id","values","addPost","newPostText","compose","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","useState","editMode","setEditMode","status","setStatus","isOwner","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","error","style","createField","Input","type","Object","keys","contacts","key","ProfileData","goToEditMode","onClick","fullName","lookingForAJob","searching","relax","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","styles","savePhoto","saveProfile","Preloader","photos","large","userPhoto","target","files","length","initialValues","formData","then","MyPostsContainer","ProfileContainer","isShowMyProfile","userIdFromPath","this","router","params","userId","authorisedUserId","getUserProfile","getStatus","isAuth","prevProps","prevState","snapshot","setState","to","React","Component","location","useLocation","navigate","useNavigate","useParams","auth"],"sourceRoot":""}